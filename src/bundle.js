(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const n=new Uint8Array(16),r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));const o=function(o,i,u){if(e.randomUUID&&!i&&!o)return e.randomUUID();const d=(o=o||{}).random??o.rng?.()??function(){if(!t){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");t=crypto.getRandomValues.bind(crypto)}return t(n)}();if(d.length<16)throw new Error("Random bytes length must be >= 16");if(d[6]=15&d[6]|64,d[8]=63&d[8]|128,i){if((u=u||0)<0||u+16>i.length)throw new RangeError(`UUID byte range ${u}:${u+15} is out of buffer bounds`);for(let e=0;e<16;++e)i[u+e]=d[e];return i}return function(e,t=0){return(r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]).toLowerCase()}(d)},[i,u,d,c,a,l]=[".uuid-form",".uuid-count",".uuid-generate",".uuid-list",".uuid-display",".uuid-download"].map((e=>document.querySelector(e)));a.innerText=o(),d.onclick=e=>{e.preventDefault(),c.innerHTML="",[c,l].forEach((e=>e.classList.replace("hidden","visible"))),Array.from({length:+u.value||1},(()=>c.innerHTML+=`<li>${o()}</li>`))},l.onclick=()=>{const e=new Blob([Array.from(c.children).map((e=>e.innerText)).join("\n")],{type:"text/plain"});Object.assign(document.createElement("a"),{href:URL.createObjectURL(e),download:"uuids.txt"}).click()}})();